package example;

public class Example_01 {

	public static void main(String[] args) {
		/*
		 * *절차지향 
		 * 				구성요소 : 함수
		 * 				접근제어 : 없음
		 * 				다형성 : 불가능
		 * 				상속 : 불가능
		 * 				보안성 : 낮음
		 * *객체지향
		 * 				구성요소 : 객체
		 *  			접근제어 : public, protected, private
		 *   			다형성 : 함수, 생성자, 연산자 오버로딩 가능
		 *    		상속 : 가능
		 *     		보안성 : 높음
		 *     
		 * 객체지향 프로그래밍의 주요특징
		 * -추상화, 캡슐화, 상속성, 다형성
		 * 	추상화 : 필요한 정보만을 중심으로 간소화하는 것
		 * 	캡슐화 : 외부에 드러나지 않도록 어떠한 정보를 은닉하는 것
		 * 	상속성 : 부모 자식관계 하위클래스가 상위클래스의 기능을 사용할 수 있다.
		 * 	다형성 : 하나의 클래스나 메서드가 다양한 방식으로 동작이 가능한 것.		
		 * 
		 * *오버라이딩, 오버로딩
		 * -오버라이딩 : 상속관계에서 자식클래스에서 부모클래스의 메소드와 같은 이르을 사용하고 
		 * 매개변수와 리턴타입도 같은 상태에서 기능을 재정의하는것
		 * 
		 * -오버로딩 : 같은 이름의 함수를 매개변수를 다르게하여 기능을 재정의하는 것
		 * 
		 * ex) 사람(클래스)
		 * 이름,직업,나이,성별,혈액형(객체)
		 * 즉, 한클래스의 객체들은 모두 동일한 속성을 가지지만 속성값은 다르다.

		 * *클래스 구성
		 * -클래스 내부에는 필드, 생성자, 메소드가 있다.

		 * 필드 : 객체의 데이터, 메소드의 반환값을 저장
		 * 생성자 : 객체를 생성할 때 new연산자를 사용하면 호출되는 부분
		 * 메소드 : 어떠한 특정 작업을 수행하기 위한 것

		 */
		Example_02 hello = new Example_02();
		
		
	}

}
